# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: completion.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='completion.proto',
  package='gooseai',
  syntax='proto3',
  serialized_options=b'Z\r./;completion',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x10\x63ompletion.proto\x12\x07gooseai\"!\n\x05Token\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\r\"(\n\x06Tokens\x12\x1e\n\x06tokens\x18\x01 \x03(\x0b\x32\x0e.gooseai.Token\"E\n\x06Prompt\x12\x0e\n\x04text\x18\x01 \x01(\tH\x00\x12!\n\x06tokens\x18\x02 \x01(\x0b\x32\x0f.gooseai.TokensH\x00\x42\x08\n\x06prompt\":\n\tLogitBias\x12\x1f\n\x06tokens\x18\x01 \x01(\x0b\x32\x0f.gooseai.Tokens\x12\x0c\n\x04\x62ias\x18\x02 \x01(\x01\"1\n\x0bLogitBiases\x12\"\n\x06\x62iases\x18\x01 \x03(\x0b\x32\x12.gooseai.LogitBias\"\xbb\x02\n\x0f\x46requencyParams\x12\x1d\n\x10presence_penalty\x18\x01 \x01(\x01H\x00\x88\x01\x01\x12\x1e\n\x11\x66requency_penalty\x18\x02 \x01(\x01H\x01\x88\x01\x01\x12\x1f\n\x12repetition_penalty\x18\x03 \x01(\x01H\x02\x88\x01\x01\x12%\n\x18repetition_penalty_slope\x18\x04 \x01(\x01H\x03\x88\x01\x01\x12%\n\x18repetition_penalty_range\x18\x05 \x01(\x01H\x04\x88\x01\x01\x42\x13\n\x11_presence_penaltyB\x14\n\x12_frequency_penaltyB\x15\n\x13_repetition_penaltyB\x1b\n\x19_repetition_penalty_slopeB\x1b\n\x19_repetition_penalty_range\"\x9a\x02\n\x0eSamplingParams\x12&\n\x05order\x18\x01 \x03(\x0e\x32\x17.gooseai.SamplingMethod\x12\x18\n\x0btemperature\x18\x02 \x01(\x01H\x00\x88\x01\x01\x12\x12\n\x05top_p\x18\x03 \x01(\x01H\x01\x88\x01\x01\x12\x12\n\x05top_k\x18\x04 \x01(\rH\x02\x88\x01\x01\x12\x1f\n\x12tail_free_sampling\x18\x05 \x01(\x01H\x03\x88\x01\x01\x12\x16\n\ttypical_p\x18\x06 \x01(\x01H\x04\x88\x01\x01\x12\x12\n\x05top_a\x18\x07 \x01(\x01H\x05\x88\x01\x01\x42\x0e\n\x0c_temperatureB\x08\n\x06_top_pB\x08\n\x06_top_kB\x15\n\x13_tail_free_samplingB\x0c\n\n_typical_pB\x08\n\x06_top_a\"\xe4\x01\n\x0bModelParams\x12\x35\n\x0fsampling_params\x18\x01 \x01(\x0b\x32\x17.gooseai.SamplingParamsH\x00\x88\x01\x01\x12\x37\n\x10\x66requency_params\x18\x02 \x01(\x0b\x32\x18.gooseai.FrequencyParamsH\x01\x88\x01\x01\x12-\n\nlogit_bias\x18\x03 \x01(\x0b\x32\x14.gooseai.LogitBiasesH\x02\x88\x01\x01\x42\x12\n\x10_sampling_paramsB\x13\n\x11_frequency_paramsB\r\n\x0b_logit_bias\"$\n\x04\x45\x63ho\x12\x12\n\x05index\x18\x01 \x01(\x05H\x00\x88\x01\x01\x42\x08\n\x06_index\"$\n\tNAIModule\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0b\n\x03key\x18\x02 \x01(\t\"B\n\tEmbedding\x12(\n\nnai_module\x18\x01 \x01(\x0b\x32\x12.gooseai.NAIModuleH\x00\x42\x0b\n\tembedding\"\xf0\x01\n\x0c\x45ngineParams\x12\x17\n\nmax_tokens\x18\x01 \x01(\rH\x00\x88\x01\x01\x12\x18\n\x0b\x63ompletions\x18\x02 \x01(\rH\x01\x88\x01\x01\x12\x15\n\x08logprobs\x18\x03 \x01(\rH\x02\x88\x01\x01\x12 \n\x04\x65\x63ho\x18\x04 \x01(\x0b\x32\r.gooseai.EchoH\x03\x88\x01\x01\x12\x14\n\x07\x62\x65st_of\x18\x05 \x01(\rH\x04\x88\x01\x01\x12\x1d\n\x04stop\x18\x06 \x03(\x0b\x32\x0f.gooseai.PromptB\r\n\x0b_max_tokensB\x0e\n\x0c_completionsB\x0b\n\t_logprobsB\x07\n\x05_echoB\n\n\x08_best_of\"\xc4\x01\n\x07Request\x12\x11\n\tengine_id\x18\x01 \x01(\t\x12\x1f\n\x06prompt\x18\x02 \x03(\x0b\x32\x0f.gooseai.Prompt\x12/\n\x0cmodel_params\x18\x03 \x01(\x0b\x32\x14.gooseai.ModelParamsH\x00\x88\x01\x01\x12\x31\n\rengine_params\x18\x04 \x01(\x0b\x32\x15.gooseai.EngineParamsH\x01\x88\x01\x01\x42\x0f\n\r_model_paramsB\x10\n\x0e_engine_params\"z\n\x07LogProb\x12\x1d\n\x05token\x18\x01 \x01(\x0b\x32\x0e.gooseai.Token\x12\x14\n\x07logprob\x18\x02 \x01(\x01H\x00\x88\x01\x01\x12\x1b\n\x0elogprob_before\x18\x03 \x01(\x01H\x01\x88\x01\x01\x42\n\n\x08_logprobB\x11\n\x0f_logprob_before\"3\n\rTokenLogProbs\x12\"\n\x08logprobs\x18\x01 \x03(\x0b\x32\x10.gooseai.LogProb\"\xc6\x01\n\x08LogProbs\x12&\n\x06tokens\x18\x01 \x01(\x0b\x32\x16.gooseai.TokenLogProbs\x12\x13\n\x0btext_offset\x18\x02 \x03(\r\x12#\n\x03top\x18\x03 \x03(\x0b\x32\x16.gooseai.TokenLogProbs\x12*\n\ntop_before\x18\x04 \x03(\x0b\x32\x16.gooseai.TokenLogProbs\x12,\n\rfinish_reason\x18\x05 \x01(\x0e\x32\x15.gooseai.FinishReason\"\x91\x01\n\nCompletion\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\r\n\x05index\x18\x02 \x01(\r\x12#\n\x08logprobs\x18\x03 \x01(\x0b\x32\x11.gooseai.LogProbs\x12,\n\rfinish_reason\x18\x04 \x01(\x0e\x32\x15.gooseai.FinishReason\x12\x13\n\x0btoken_index\x18\x05 \x01(\r\"a\n\x06\x41nswer\x12\x11\n\tanswer_id\x18\x01 \x01(\t\x12\x0f\n\x07\x63reated\x18\x02 \x01(\x04\x12\r\n\x05model\x18\x03 \x01(\t\x12$\n\x07\x63hoices\x18\x04 \x03(\x0b\x32\x13.gooseai.Completion*$\n\x0c\x46inishReason\x12\x08\n\x04NULL\x10\x00\x12\n\n\x06LENGTH\x10\x01*d\n\x0eSamplingMethod\x12\x08\n\x04NONE\x10\x00\x12\x0f\n\x0bTEMPERATURE\x10\x01\x12\t\n\x05TOP_K\x10\x02\x12\t\n\x05TOP_P\x10\x03\x12\x07\n\x03TFS\x10\x04\x12\t\n\x05TOP_A\x10\x05\x12\r\n\tTYPICAL_P\x10\x06\x32H\n\x11\x43ompletionService\x12\x33\n\nCompletion\x12\x10.gooseai.Request\x1a\x0f.gooseai.Answer\"\x00\x30\x01\x42\x0fZ\r./;completionb\x06proto3'
)

_FINISHREASON = _descriptor.EnumDescriptor(
  name='FinishReason',
  full_name='gooseai.FinishReason',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NULL', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LENGTH', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2333,
  serialized_end=2369,
)
_sym_db.RegisterEnumDescriptor(_FINISHREASON)

FinishReason = enum_type_wrapper.EnumTypeWrapper(_FINISHREASON)
_SAMPLINGMETHOD = _descriptor.EnumDescriptor(
  name='SamplingMethod',
  full_name='gooseai.SamplingMethod',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TEMPERATURE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TOP_K', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TOP_P', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TFS', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TOP_A', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TYPICAL_P', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2371,
  serialized_end=2471,
)
_sym_db.RegisterEnumDescriptor(_SAMPLINGMETHOD)

SamplingMethod = enum_type_wrapper.EnumTypeWrapper(_SAMPLINGMETHOD)
NULL = 0
LENGTH = 1
NONE = 0
TEMPERATURE = 1
TOP_K = 2
TOP_P = 3
TFS = 4
TOP_A = 5
TYPICAL_P = 6



_TOKEN = _descriptor.Descriptor(
  name='Token',
  full_name='gooseai.Token',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='gooseai.Token.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='id', full_name='gooseai.Token.id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=29,
  serialized_end=62,
)


_TOKENS = _descriptor.Descriptor(
  name='Tokens',
  full_name='gooseai.Tokens',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='tokens', full_name='gooseai.Tokens.tokens', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=64,
  serialized_end=104,
)


_PROMPT = _descriptor.Descriptor(
  name='Prompt',
  full_name='gooseai.Prompt',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='gooseai.Prompt.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tokens', full_name='gooseai.Prompt.tokens', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='prompt', full_name='gooseai.Prompt.prompt',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=106,
  serialized_end=175,
)


_LOGITBIAS = _descriptor.Descriptor(
  name='LogitBias',
  full_name='gooseai.LogitBias',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='tokens', full_name='gooseai.LogitBias.tokens', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bias', full_name='gooseai.LogitBias.bias', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=177,
  serialized_end=235,
)


_LOGITBIASES = _descriptor.Descriptor(
  name='LogitBiases',
  full_name='gooseai.LogitBiases',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='biases', full_name='gooseai.LogitBiases.biases', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=237,
  serialized_end=286,
)


_FREQUENCYPARAMS = _descriptor.Descriptor(
  name='FrequencyParams',
  full_name='gooseai.FrequencyParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='presence_penalty', full_name='gooseai.FrequencyParams.presence_penalty', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='frequency_penalty', full_name='gooseai.FrequencyParams.frequency_penalty', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='repetition_penalty', full_name='gooseai.FrequencyParams.repetition_penalty', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='repetition_penalty_slope', full_name='gooseai.FrequencyParams.repetition_penalty_slope', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='repetition_penalty_range', full_name='gooseai.FrequencyParams.repetition_penalty_range', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_presence_penalty', full_name='gooseai.FrequencyParams._presence_penalty',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_frequency_penalty', full_name='gooseai.FrequencyParams._frequency_penalty',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_repetition_penalty', full_name='gooseai.FrequencyParams._repetition_penalty',
      index=2, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_repetition_penalty_slope', full_name='gooseai.FrequencyParams._repetition_penalty_slope',
      index=3, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_repetition_penalty_range', full_name='gooseai.FrequencyParams._repetition_penalty_range',
      index=4, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=289,
  serialized_end=604,
)


_SAMPLINGPARAMS = _descriptor.Descriptor(
  name='SamplingParams',
  full_name='gooseai.SamplingParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='order', full_name='gooseai.SamplingParams.order', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='temperature', full_name='gooseai.SamplingParams.temperature', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='top_p', full_name='gooseai.SamplingParams.top_p', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='top_k', full_name='gooseai.SamplingParams.top_k', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tail_free_sampling', full_name='gooseai.SamplingParams.tail_free_sampling', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='typical_p', full_name='gooseai.SamplingParams.typical_p', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='top_a', full_name='gooseai.SamplingParams.top_a', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_temperature', full_name='gooseai.SamplingParams._temperature',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_top_p', full_name='gooseai.SamplingParams._top_p',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_top_k', full_name='gooseai.SamplingParams._top_k',
      index=2, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_tail_free_sampling', full_name='gooseai.SamplingParams._tail_free_sampling',
      index=3, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_typical_p', full_name='gooseai.SamplingParams._typical_p',
      index=4, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_top_a', full_name='gooseai.SamplingParams._top_a',
      index=5, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=607,
  serialized_end=889,
)


_MODELPARAMS = _descriptor.Descriptor(
  name='ModelParams',
  full_name='gooseai.ModelParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sampling_params', full_name='gooseai.ModelParams.sampling_params', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='frequency_params', full_name='gooseai.ModelParams.frequency_params', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='logit_bias', full_name='gooseai.ModelParams.logit_bias', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_sampling_params', full_name='gooseai.ModelParams._sampling_params',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_frequency_params', full_name='gooseai.ModelParams._frequency_params',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_logit_bias', full_name='gooseai.ModelParams._logit_bias',
      index=2, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=892,
  serialized_end=1120,
)


_ECHO = _descriptor.Descriptor(
  name='Echo',
  full_name='gooseai.Echo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='gooseai.Echo.index', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_index', full_name='gooseai.Echo._index',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1122,
  serialized_end=1158,
)


_NAIMODULE = _descriptor.Descriptor(
  name='NAIModule',
  full_name='gooseai.NAIModule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='gooseai.NAIModule.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key', full_name='gooseai.NAIModule.key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1160,
  serialized_end=1196,
)


_EMBEDDING = _descriptor.Descriptor(
  name='Embedding',
  full_name='gooseai.Embedding',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nai_module', full_name='gooseai.Embedding.nai_module', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='embedding', full_name='gooseai.Embedding.embedding',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1198,
  serialized_end=1264,
)


_ENGINEPARAMS = _descriptor.Descriptor(
  name='EngineParams',
  full_name='gooseai.EngineParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='max_tokens', full_name='gooseai.EngineParams.max_tokens', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='completions', full_name='gooseai.EngineParams.completions', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='logprobs', full_name='gooseai.EngineParams.logprobs', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='echo', full_name='gooseai.EngineParams.echo', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='best_of', full_name='gooseai.EngineParams.best_of', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='stop', full_name='gooseai.EngineParams.stop', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_max_tokens', full_name='gooseai.EngineParams._max_tokens',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_completions', full_name='gooseai.EngineParams._completions',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_logprobs', full_name='gooseai.EngineParams._logprobs',
      index=2, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_echo', full_name='gooseai.EngineParams._echo',
      index=3, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_best_of', full_name='gooseai.EngineParams._best_of',
      index=4, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1267,
  serialized_end=1507,
)


_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='gooseai.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='engine_id', full_name='gooseai.Request.engine_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prompt', full_name='gooseai.Request.prompt', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='model_params', full_name='gooseai.Request.model_params', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='engine_params', full_name='gooseai.Request.engine_params', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_model_params', full_name='gooseai.Request._model_params',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_engine_params', full_name='gooseai.Request._engine_params',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1510,
  serialized_end=1706,
)


_LOGPROB = _descriptor.Descriptor(
  name='LogProb',
  full_name='gooseai.LogProb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='gooseai.LogProb.token', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='logprob', full_name='gooseai.LogProb.logprob', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='logprob_before', full_name='gooseai.LogProb.logprob_before', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_logprob', full_name='gooseai.LogProb._logprob',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_logprob_before', full_name='gooseai.LogProb._logprob_before',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1708,
  serialized_end=1830,
)


_TOKENLOGPROBS = _descriptor.Descriptor(
  name='TokenLogProbs',
  full_name='gooseai.TokenLogProbs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='logprobs', full_name='gooseai.TokenLogProbs.logprobs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1832,
  serialized_end=1883,
)


_LOGPROBS = _descriptor.Descriptor(
  name='LogProbs',
  full_name='gooseai.LogProbs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='tokens', full_name='gooseai.LogProbs.tokens', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='text_offset', full_name='gooseai.LogProbs.text_offset', index=1,
      number=2, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='top', full_name='gooseai.LogProbs.top', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='top_before', full_name='gooseai.LogProbs.top_before', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='finish_reason', full_name='gooseai.LogProbs.finish_reason', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1886,
  serialized_end=2084,
)


_COMPLETION = _descriptor.Descriptor(
  name='Completion',
  full_name='gooseai.Completion',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='gooseai.Completion.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='index', full_name='gooseai.Completion.index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='logprobs', full_name='gooseai.Completion.logprobs', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='finish_reason', full_name='gooseai.Completion.finish_reason', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='token_index', full_name='gooseai.Completion.token_index', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2087,
  serialized_end=2232,
)


_ANSWER = _descriptor.Descriptor(
  name='Answer',
  full_name='gooseai.Answer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='answer_id', full_name='gooseai.Answer.answer_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='created', full_name='gooseai.Answer.created', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='model', full_name='gooseai.Answer.model', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='choices', full_name='gooseai.Answer.choices', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2234,
  serialized_end=2331,
)

_TOKENS.fields_by_name['tokens'].message_type = _TOKEN
_PROMPT.fields_by_name['tokens'].message_type = _TOKENS
_PROMPT.oneofs_by_name['prompt'].fields.append(
  _PROMPT.fields_by_name['text'])
_PROMPT.fields_by_name['text'].containing_oneof = _PROMPT.oneofs_by_name['prompt']
_PROMPT.oneofs_by_name['prompt'].fields.append(
  _PROMPT.fields_by_name['tokens'])
_PROMPT.fields_by_name['tokens'].containing_oneof = _PROMPT.oneofs_by_name['prompt']
_LOGITBIAS.fields_by_name['tokens'].message_type = _TOKENS
_LOGITBIASES.fields_by_name['biases'].message_type = _LOGITBIAS
_FREQUENCYPARAMS.oneofs_by_name['_presence_penalty'].fields.append(
  _FREQUENCYPARAMS.fields_by_name['presence_penalty'])
_FREQUENCYPARAMS.fields_by_name['presence_penalty'].containing_oneof = _FREQUENCYPARAMS.oneofs_by_name['_presence_penalty']
_FREQUENCYPARAMS.oneofs_by_name['_frequency_penalty'].fields.append(
  _FREQUENCYPARAMS.fields_by_name['frequency_penalty'])
_FREQUENCYPARAMS.fields_by_name['frequency_penalty'].containing_oneof = _FREQUENCYPARAMS.oneofs_by_name['_frequency_penalty']
_FREQUENCYPARAMS.oneofs_by_name['_repetition_penalty'].fields.append(
  _FREQUENCYPARAMS.fields_by_name['repetition_penalty'])
_FREQUENCYPARAMS.fields_by_name['repetition_penalty'].containing_oneof = _FREQUENCYPARAMS.oneofs_by_name['_repetition_penalty']
_FREQUENCYPARAMS.oneofs_by_name['_repetition_penalty_slope'].fields.append(
  _FREQUENCYPARAMS.fields_by_name['repetition_penalty_slope'])
_FREQUENCYPARAMS.fields_by_name['repetition_penalty_slope'].containing_oneof = _FREQUENCYPARAMS.oneofs_by_name['_repetition_penalty_slope']
_FREQUENCYPARAMS.oneofs_by_name['_repetition_penalty_range'].fields.append(
  _FREQUENCYPARAMS.fields_by_name['repetition_penalty_range'])
_FREQUENCYPARAMS.fields_by_name['repetition_penalty_range'].containing_oneof = _FREQUENCYPARAMS.oneofs_by_name['_repetition_penalty_range']
_SAMPLINGPARAMS.fields_by_name['order'].enum_type = _SAMPLINGMETHOD
_SAMPLINGPARAMS.oneofs_by_name['_temperature'].fields.append(
  _SAMPLINGPARAMS.fields_by_name['temperature'])
_SAMPLINGPARAMS.fields_by_name['temperature'].containing_oneof = _SAMPLINGPARAMS.oneofs_by_name['_temperature']
_SAMPLINGPARAMS.oneofs_by_name['_top_p'].fields.append(
  _SAMPLINGPARAMS.fields_by_name['top_p'])
_SAMPLINGPARAMS.fields_by_name['top_p'].containing_oneof = _SAMPLINGPARAMS.oneofs_by_name['_top_p']
_SAMPLINGPARAMS.oneofs_by_name['_top_k'].fields.append(
  _SAMPLINGPARAMS.fields_by_name['top_k'])
_SAMPLINGPARAMS.fields_by_name['top_k'].containing_oneof = _SAMPLINGPARAMS.oneofs_by_name['_top_k']
_SAMPLINGPARAMS.oneofs_by_name['_tail_free_sampling'].fields.append(
  _SAMPLINGPARAMS.fields_by_name['tail_free_sampling'])
_SAMPLINGPARAMS.fields_by_name['tail_free_sampling'].containing_oneof = _SAMPLINGPARAMS.oneofs_by_name['_tail_free_sampling']
_SAMPLINGPARAMS.oneofs_by_name['_typical_p'].fields.append(
  _SAMPLINGPARAMS.fields_by_name['typical_p'])
_SAMPLINGPARAMS.fields_by_name['typical_p'].containing_oneof = _SAMPLINGPARAMS.oneofs_by_name['_typical_p']
_SAMPLINGPARAMS.oneofs_by_name['_top_a'].fields.append(
  _SAMPLINGPARAMS.fields_by_name['top_a'])
_SAMPLINGPARAMS.fields_by_name['top_a'].containing_oneof = _SAMPLINGPARAMS.oneofs_by_name['_top_a']
_MODELPARAMS.fields_by_name['sampling_params'].message_type = _SAMPLINGPARAMS
_MODELPARAMS.fields_by_name['frequency_params'].message_type = _FREQUENCYPARAMS
_MODELPARAMS.fields_by_name['logit_bias'].message_type = _LOGITBIASES
_MODELPARAMS.oneofs_by_name['_sampling_params'].fields.append(
  _MODELPARAMS.fields_by_name['sampling_params'])
_MODELPARAMS.fields_by_name['sampling_params'].containing_oneof = _MODELPARAMS.oneofs_by_name['_sampling_params']
_MODELPARAMS.oneofs_by_name['_frequency_params'].fields.append(
  _MODELPARAMS.fields_by_name['frequency_params'])
_MODELPARAMS.fields_by_name['frequency_params'].containing_oneof = _MODELPARAMS.oneofs_by_name['_frequency_params']
_MODELPARAMS.oneofs_by_name['_logit_bias'].fields.append(
  _MODELPARAMS.fields_by_name['logit_bias'])
_MODELPARAMS.fields_by_name['logit_bias'].containing_oneof = _MODELPARAMS.oneofs_by_name['_logit_bias']
_ECHO.oneofs_by_name['_index'].fields.append(
  _ECHO.fields_by_name['index'])
_ECHO.fields_by_name['index'].containing_oneof = _ECHO.oneofs_by_name['_index']
_EMBEDDING.fields_by_name['nai_module'].message_type = _NAIMODULE
_EMBEDDING.oneofs_by_name['embedding'].fields.append(
  _EMBEDDING.fields_by_name['nai_module'])
_EMBEDDING.fields_by_name['nai_module'].containing_oneof = _EMBEDDING.oneofs_by_name['embedding']
_ENGINEPARAMS.fields_by_name['echo'].message_type = _ECHO
_ENGINEPARAMS.fields_by_name['stop'].message_type = _PROMPT
_ENGINEPARAMS.oneofs_by_name['_max_tokens'].fields.append(
  _ENGINEPARAMS.fields_by_name['max_tokens'])
_ENGINEPARAMS.fields_by_name['max_tokens'].containing_oneof = _ENGINEPARAMS.oneofs_by_name['_max_tokens']
_ENGINEPARAMS.oneofs_by_name['_completions'].fields.append(
  _ENGINEPARAMS.fields_by_name['completions'])
_ENGINEPARAMS.fields_by_name['completions'].containing_oneof = _ENGINEPARAMS.oneofs_by_name['_completions']
_ENGINEPARAMS.oneofs_by_name['_logprobs'].fields.append(
  _ENGINEPARAMS.fields_by_name['logprobs'])
_ENGINEPARAMS.fields_by_name['logprobs'].containing_oneof = _ENGINEPARAMS.oneofs_by_name['_logprobs']
_ENGINEPARAMS.oneofs_by_name['_echo'].fields.append(
  _ENGINEPARAMS.fields_by_name['echo'])
_ENGINEPARAMS.fields_by_name['echo'].containing_oneof = _ENGINEPARAMS.oneofs_by_name['_echo']
_ENGINEPARAMS.oneofs_by_name['_best_of'].fields.append(
  _ENGINEPARAMS.fields_by_name['best_of'])
_ENGINEPARAMS.fields_by_name['best_of'].containing_oneof = _ENGINEPARAMS.oneofs_by_name['_best_of']
_REQUEST.fields_by_name['prompt'].message_type = _PROMPT
_REQUEST.fields_by_name['model_params'].message_type = _MODELPARAMS
_REQUEST.fields_by_name['engine_params'].message_type = _ENGINEPARAMS
_REQUEST.oneofs_by_name['_model_params'].fields.append(
  _REQUEST.fields_by_name['model_params'])
_REQUEST.fields_by_name['model_params'].containing_oneof = _REQUEST.oneofs_by_name['_model_params']
_REQUEST.oneofs_by_name['_engine_params'].fields.append(
  _REQUEST.fields_by_name['engine_params'])
_REQUEST.fields_by_name['engine_params'].containing_oneof = _REQUEST.oneofs_by_name['_engine_params']
_LOGPROB.fields_by_name['token'].message_type = _TOKEN
_LOGPROB.oneofs_by_name['_logprob'].fields.append(
  _LOGPROB.fields_by_name['logprob'])
_LOGPROB.fields_by_name['logprob'].containing_oneof = _LOGPROB.oneofs_by_name['_logprob']
_LOGPROB.oneofs_by_name['_logprob_before'].fields.append(
  _LOGPROB.fields_by_name['logprob_before'])
_LOGPROB.fields_by_name['logprob_before'].containing_oneof = _LOGPROB.oneofs_by_name['_logprob_before']
_TOKENLOGPROBS.fields_by_name['logprobs'].message_type = _LOGPROB
_LOGPROBS.fields_by_name['tokens'].message_type = _TOKENLOGPROBS
_LOGPROBS.fields_by_name['top'].message_type = _TOKENLOGPROBS
_LOGPROBS.fields_by_name['top_before'].message_type = _TOKENLOGPROBS
_LOGPROBS.fields_by_name['finish_reason'].enum_type = _FINISHREASON
_COMPLETION.fields_by_name['logprobs'].message_type = _LOGPROBS
_COMPLETION.fields_by_name['finish_reason'].enum_type = _FINISHREASON
_ANSWER.fields_by_name['choices'].message_type = _COMPLETION
DESCRIPTOR.message_types_by_name['Token'] = _TOKEN
DESCRIPTOR.message_types_by_name['Tokens'] = _TOKENS
DESCRIPTOR.message_types_by_name['Prompt'] = _PROMPT
DESCRIPTOR.message_types_by_name['LogitBias'] = _LOGITBIAS
DESCRIPTOR.message_types_by_name['LogitBiases'] = _LOGITBIASES
DESCRIPTOR.message_types_by_name['FrequencyParams'] = _FREQUENCYPARAMS
DESCRIPTOR.message_types_by_name['SamplingParams'] = _SAMPLINGPARAMS
DESCRIPTOR.message_types_by_name['ModelParams'] = _MODELPARAMS
DESCRIPTOR.message_types_by_name['Echo'] = _ECHO
DESCRIPTOR.message_types_by_name['NAIModule'] = _NAIMODULE
DESCRIPTOR.message_types_by_name['Embedding'] = _EMBEDDING
DESCRIPTOR.message_types_by_name['EngineParams'] = _ENGINEPARAMS
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['LogProb'] = _LOGPROB
DESCRIPTOR.message_types_by_name['TokenLogProbs'] = _TOKENLOGPROBS
DESCRIPTOR.message_types_by_name['LogProbs'] = _LOGPROBS
DESCRIPTOR.message_types_by_name['Completion'] = _COMPLETION
DESCRIPTOR.message_types_by_name['Answer'] = _ANSWER
DESCRIPTOR.enum_types_by_name['FinishReason'] = _FINISHREASON
DESCRIPTOR.enum_types_by_name['SamplingMethod'] = _SAMPLINGMETHOD
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Token = _reflection.GeneratedProtocolMessageType('Token', (_message.Message,), {
  'DESCRIPTOR' : _TOKEN,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.Token)
  })
_sym_db.RegisterMessage(Token)

Tokens = _reflection.GeneratedProtocolMessageType('Tokens', (_message.Message,), {
  'DESCRIPTOR' : _TOKENS,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.Tokens)
  })
_sym_db.RegisterMessage(Tokens)

Prompt = _reflection.GeneratedProtocolMessageType('Prompt', (_message.Message,), {
  'DESCRIPTOR' : _PROMPT,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.Prompt)
  })
_sym_db.RegisterMessage(Prompt)

LogitBias = _reflection.GeneratedProtocolMessageType('LogitBias', (_message.Message,), {
  'DESCRIPTOR' : _LOGITBIAS,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.LogitBias)
  })
_sym_db.RegisterMessage(LogitBias)

LogitBiases = _reflection.GeneratedProtocolMessageType('LogitBiases', (_message.Message,), {
  'DESCRIPTOR' : _LOGITBIASES,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.LogitBiases)
  })
_sym_db.RegisterMessage(LogitBiases)

FrequencyParams = _reflection.GeneratedProtocolMessageType('FrequencyParams', (_message.Message,), {
  'DESCRIPTOR' : _FREQUENCYPARAMS,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.FrequencyParams)
  })
_sym_db.RegisterMessage(FrequencyParams)

SamplingParams = _reflection.GeneratedProtocolMessageType('SamplingParams', (_message.Message,), {
  'DESCRIPTOR' : _SAMPLINGPARAMS,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.SamplingParams)
  })
_sym_db.RegisterMessage(SamplingParams)

ModelParams = _reflection.GeneratedProtocolMessageType('ModelParams', (_message.Message,), {
  'DESCRIPTOR' : _MODELPARAMS,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.ModelParams)
  })
_sym_db.RegisterMessage(ModelParams)

Echo = _reflection.GeneratedProtocolMessageType('Echo', (_message.Message,), {
  'DESCRIPTOR' : _ECHO,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.Echo)
  })
_sym_db.RegisterMessage(Echo)

NAIModule = _reflection.GeneratedProtocolMessageType('NAIModule', (_message.Message,), {
  'DESCRIPTOR' : _NAIMODULE,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.NAIModule)
  })
_sym_db.RegisterMessage(NAIModule)

Embedding = _reflection.GeneratedProtocolMessageType('Embedding', (_message.Message,), {
  'DESCRIPTOR' : _EMBEDDING,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.Embedding)
  })
_sym_db.RegisterMessage(Embedding)

EngineParams = _reflection.GeneratedProtocolMessageType('EngineParams', (_message.Message,), {
  'DESCRIPTOR' : _ENGINEPARAMS,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.EngineParams)
  })
_sym_db.RegisterMessage(EngineParams)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), {
  'DESCRIPTOR' : _REQUEST,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.Request)
  })
_sym_db.RegisterMessage(Request)

LogProb = _reflection.GeneratedProtocolMessageType('LogProb', (_message.Message,), {
  'DESCRIPTOR' : _LOGPROB,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.LogProb)
  })
_sym_db.RegisterMessage(LogProb)

TokenLogProbs = _reflection.GeneratedProtocolMessageType('TokenLogProbs', (_message.Message,), {
  'DESCRIPTOR' : _TOKENLOGPROBS,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.TokenLogProbs)
  })
_sym_db.RegisterMessage(TokenLogProbs)

LogProbs = _reflection.GeneratedProtocolMessageType('LogProbs', (_message.Message,), {
  'DESCRIPTOR' : _LOGPROBS,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.LogProbs)
  })
_sym_db.RegisterMessage(LogProbs)

Completion = _reflection.GeneratedProtocolMessageType('Completion', (_message.Message,), {
  'DESCRIPTOR' : _COMPLETION,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.Completion)
  })
_sym_db.RegisterMessage(Completion)

Answer = _reflection.GeneratedProtocolMessageType('Answer', (_message.Message,), {
  'DESCRIPTOR' : _ANSWER,
  '__module__' : 'completion_pb2'
  # @@protoc_insertion_point(class_scope:gooseai.Answer)
  })
_sym_db.RegisterMessage(Answer)


DESCRIPTOR._options = None

_COMPLETIONSERVICE = _descriptor.ServiceDescriptor(
  name='CompletionService',
  full_name='gooseai.CompletionService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=2473,
  serialized_end=2545,
  methods=[
  _descriptor.MethodDescriptor(
    name='Completion',
    full_name='gooseai.CompletionService.Completion',
    index=0,
    containing_service=None,
    input_type=_REQUEST,
    output_type=_ANSWER,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_COMPLETIONSERVICE)

DESCRIPTOR.services_by_name['CompletionService'] = _COMPLETIONSERVICE

# @@protoc_insertion_point(module_scope)
